//46341 4793

#include<iostream>
#include<cmath>
using namespace std;

#define MAX 46341
#define TOL 4793

int prime[TOL];
int isprime[MAX];
int count=0;
	
	
int findprime(int n)
{
	if(n<MAX)
		return isprime[n];
	else
	{
		for(int i=0;i<count;i++)
		{
			if(n%prime[i]==0)
			{
				return 1;
			}
				
		}
		return 0;
	}

}



int main()
{

	
	int a,b;
	int check=sqrt(MAX);

	
	
	for(int i=2;i<=check;i++)
	{
		if(isprime[i])
			continue;
		for(int j=i+i;j<MAX;j+=i)
		{
			isprime[j]=1;
		}
	}
	
	
	for(int i=2;i<MAX;i++)
	{
		if(isprime[i]==0)
			prime[count++]=i;
	}
	
	while(cin>>a>>b)
	{
		int num[b-a+2];
		int x=0,y=0;
		int ma=0,mi=MAX+1,value=0,c,d;
		
		if(a<=2)
		{
			num[y++]=2;
			a=3;
		}
		
		for(x=a;x<=b;x++)
		{
			if(findprime(x)==0)
				num[y++]=x;
		}
		
		
		if(y==1)
		{
			cout<<"There are no adjacent primes."<<endl;
			continue;
		}
		for(x=1;x<y;x++)
		{
			value=num[x]-num[x-1];
			if(value<mi)
			{
				mi=value;
				c=num[x-1];
				d=num[x];
			}
		}
		
		cout<<c<<","<<d<<" are closest, ";
		
		for(x=1;x<y;x++)
		{
			value=num[x]-num[x-1];
			if(value>ma)
			{
				ma=value;
				c=num[x-1];
				d=num[x];
			}
		}
		
		cout<<c<<","<<d<<" are most distant."<<endl;
	}



}
